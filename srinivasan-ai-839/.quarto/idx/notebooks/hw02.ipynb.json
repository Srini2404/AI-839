{"title":"Home Work 2","markdown":{"yaml":{"title":"Home Work 2"},"headingText":"Soybean Dataset Data Card","containsRefs":false,"markdown":"\n\n\n\n - using PyFME library to include details about meta information of the dataset.\n\n\n\n\n---\n\n\n## Dataset Overview\nThe Soybean dataset is a well-known benchmark dataset commonly used in machine learning tasks. It contains 683 instances and 35 attributes (excluding the target class). The dataset has 19 distinct classes, representing different types of soybean diseases.\n\n### Basic Dataset Features:\n- **Number of Instances:** 683\n- **Number of Attributes:** 35\n- **Number of Classes:** 19\n\n## Meta-Features Extracted\nMeta-features provide insights into the characteristics of the dataset that could be used for tasks like meta-learning. Below are some of the meta-features extracted:\n\n| **Feature**                  | **Value**                      |\n|------------------------------|--------------------------------|\n| num_instances                | 683                            |\n| num_attributes               | 35                             |\n| num_classes                  | 19                             |\n| attr_conc.mean               | 0.097                          |\n| attr_conc.sd                 | 0.155                          |\n| best_node.mean               | 0.261                          |\n| best_node.sd                 | 0.006                          |\n| can_cor.mean                 | 0.945                          |\n| can_cor.sd                   | 0.088                          |\n| class_conc.mean              | 0.553                          |\n| class_conc.sd                | 0.292                          |\n| class_ent                    | 3.836                          |\n| cor.mean                     | 0.145                          |\n| cor.sd                       | 0.151                          |\n| eigenvalues.mean             | 0.145                          |\n| eigenvalues.sd               | 0.368                          |\n| freq_class.mean              | 0.053                          |\n| freq_class.sd                | 0.044                          |\n| gravity                      | 5.676                          |\n| kurtosis.mean                | 12.651                         |\n| kurtosis.sd                  | 68.915                         |\n| leaves                       | 72                             |\n| leaves_branch.mean           | 10.389                         |\n| leaves_branch.sd             | 3.899                          |\n| leaves_per_class.mean        | 0.053                          |\n| leaves_per_class.sd          | 0.066                          |\n| max.mean                     | 1.0                            |\n| median.mean                  | 0.263                          |\n| median.sd                    | 0.442                          |\n| min.mean                     | 0.0                            |\n| min.sd                       | 0.0                            |\n| nodes                        | 71                             |\n| nodes_per_attr               | 0.717                          |\n| one_nn.mean                  | 0.924                          |\n| one_nn.sd                    | 0.053                          |\n| random_node.mean             | 0.198                          |\n| random_node.sd               | 0.029                          |\n| tree_depth.mean              | 9.469                          |\n| tree_depth.sd                | 4.036                          |\n| var.mean                     | 0.145                          |\n| var.sd                       | 0.076                          |\n| worst_node.mean              | 0.132                          |\n| worst_node.sd                | 0.001                          |\n\n### Note:\nSome meta-features like `attr_ent.mean`, `attr_ent.sd`, `cat_to_num`, `mut_inf.mean`, etc., were not available in this dataset (NaN values).\n\n## Code to Extract Features\nThe following code was used to load the Soybean dataset, extract basic dataset features, and compute meta-features using the PyMFE library:\n\n## Explanation of Meta-Feature Column Names\n\n| **Feature**                  | **Meaning**                                                                 |\n|------------------------------|-----------------------------------------------------------------------------|\n| num_instances                | Total number of instances (rows) in the dataset.                            |\n| num_attributes               | Total number of attributes (columns) in the dataset, excluding the target.  |\n| num_classes                  | Total number of distinct classes in the target attribute.                   |\n| attr_conc.mean               | Mean attribute concentration.                                               |\n| attr_conc.sd                 | Standard deviation of attribute concentration.                              |\n| best_node.mean               | Mean value of the best node metric.                                         |\n| best_node.sd                 | Standard deviation of the best node metric.                                 |\n| can_cor.mean                 | Mean canonical correlation.                                                 |\n| can_cor.sd                   | Standard deviation of canonical correlation.                                |\n| class_conc.mean              | Mean class concentration.                                                   |\n| class_conc.sd                | Standard deviation of class concentration.                                  |\n| class_ent                    | Class entropy, a measure of class distribution randomness.                  |\n| cor.mean                     | Mean correlation between attributes.                                        |\n| cor.sd                       | Standard deviation of correlation between attributes.                       |\n| eigenvalues.mean             | Mean of the eigenvalues of the covariance matrix.                           |\n| eigenvalues.sd               | Standard deviation of the eigenvalues of the covariance matrix.             |\n| freq_class.mean              | Mean frequency of the classes.                                              |\n| freq_class.sd                | Standard deviation of the frequency of the classes.                         |\n| gravity                      | Gravity, a measure related to the dataset's geometric properties.           |\n| kurtosis.mean                | Mean kurtosis of the attributes.                                            |\n| kurtosis.sd                  | Standard deviation of kurtosis of the attributes.                           |\n| leaves                       | Total number of leaves in the decision tree.                                |\n| leaves_branch.mean           | Mean number of leaves per branch in the decision tree.                      |\n| leaves_branch.sd             | Standard deviation of leaves per branch in the decision tree.               |\n| leaves_per_class.mean        | Mean number of leaves per class in the decision tree.                       |\n| leaves_per_class.sd          | Standard deviation of leaves per class in the decision tree.                |\n| max.mean                     | Mean of the maximum values of the attributes.                               |\n| median.mean                  | Mean of the median values of the attributes.                                |\n| median.sd                    | Standard deviation of the median values of the attributes.                  |\n| min.mean                     | Mean of the minimum values of the attributes.                               |\n| min.sd                       | Standard deviation of the minimum values of the attributes.                 |\n\n\n\n## File Output\nThe extracted features are stored in the CSV file `soybean_all_features.csv`. This file contains both the basic dataset characteristics and the extracted meta-features, formatted as `Feature, Value` pairs.\n\n---\n\nThis data card provides a quick summary of the dataset and the code used for feature extraction. It's a useful reference for understanding the dataset's structure and the extracted meta-features.\n","srcMarkdownNoYaml":"\n\n\n\n - using PyFME library to include details about meta information of the dataset.\n\n\n\n\n---\n\n# Soybean Dataset Data Card\n\n## Dataset Overview\nThe Soybean dataset is a well-known benchmark dataset commonly used in machine learning tasks. It contains 683 instances and 35 attributes (excluding the target class). The dataset has 19 distinct classes, representing different types of soybean diseases.\n\n### Basic Dataset Features:\n- **Number of Instances:** 683\n- **Number of Attributes:** 35\n- **Number of Classes:** 19\n\n## Meta-Features Extracted\nMeta-features provide insights into the characteristics of the dataset that could be used for tasks like meta-learning. Below are some of the meta-features extracted:\n\n| **Feature**                  | **Value**                      |\n|------------------------------|--------------------------------|\n| num_instances                | 683                            |\n| num_attributes               | 35                             |\n| num_classes                  | 19                             |\n| attr_conc.mean               | 0.097                          |\n| attr_conc.sd                 | 0.155                          |\n| best_node.mean               | 0.261                          |\n| best_node.sd                 | 0.006                          |\n| can_cor.mean                 | 0.945                          |\n| can_cor.sd                   | 0.088                          |\n| class_conc.mean              | 0.553                          |\n| class_conc.sd                | 0.292                          |\n| class_ent                    | 3.836                          |\n| cor.mean                     | 0.145                          |\n| cor.sd                       | 0.151                          |\n| eigenvalues.mean             | 0.145                          |\n| eigenvalues.sd               | 0.368                          |\n| freq_class.mean              | 0.053                          |\n| freq_class.sd                | 0.044                          |\n| gravity                      | 5.676                          |\n| kurtosis.mean                | 12.651                         |\n| kurtosis.sd                  | 68.915                         |\n| leaves                       | 72                             |\n| leaves_branch.mean           | 10.389                         |\n| leaves_branch.sd             | 3.899                          |\n| leaves_per_class.mean        | 0.053                          |\n| leaves_per_class.sd          | 0.066                          |\n| max.mean                     | 1.0                            |\n| median.mean                  | 0.263                          |\n| median.sd                    | 0.442                          |\n| min.mean                     | 0.0                            |\n| min.sd                       | 0.0                            |\n| nodes                        | 71                             |\n| nodes_per_attr               | 0.717                          |\n| one_nn.mean                  | 0.924                          |\n| one_nn.sd                    | 0.053                          |\n| random_node.mean             | 0.198                          |\n| random_node.sd               | 0.029                          |\n| tree_depth.mean              | 9.469                          |\n| tree_depth.sd                | 4.036                          |\n| var.mean                     | 0.145                          |\n| var.sd                       | 0.076                          |\n| worst_node.mean              | 0.132                          |\n| worst_node.sd                | 0.001                          |\n\n### Note:\nSome meta-features like `attr_ent.mean`, `attr_ent.sd`, `cat_to_num`, `mut_inf.mean`, etc., were not available in this dataset (NaN values).\n\n## Code to Extract Features\nThe following code was used to load the Soybean dataset, extract basic dataset features, and compute meta-features using the PyMFE library:\n\n## Explanation of Meta-Feature Column Names\n\n| **Feature**                  | **Meaning**                                                                 |\n|------------------------------|-----------------------------------------------------------------------------|\n| num_instances                | Total number of instances (rows) in the dataset.                            |\n| num_attributes               | Total number of attributes (columns) in the dataset, excluding the target.  |\n| num_classes                  | Total number of distinct classes in the target attribute.                   |\n| attr_conc.mean               | Mean attribute concentration.                                               |\n| attr_conc.sd                 | Standard deviation of attribute concentration.                              |\n| best_node.mean               | Mean value of the best node metric.                                         |\n| best_node.sd                 | Standard deviation of the best node metric.                                 |\n| can_cor.mean                 | Mean canonical correlation.                                                 |\n| can_cor.sd                   | Standard deviation of canonical correlation.                                |\n| class_conc.mean              | Mean class concentration.                                                   |\n| class_conc.sd                | Standard deviation of class concentration.                                  |\n| class_ent                    | Class entropy, a measure of class distribution randomness.                  |\n| cor.mean                     | Mean correlation between attributes.                                        |\n| cor.sd                       | Standard deviation of correlation between attributes.                       |\n| eigenvalues.mean             | Mean of the eigenvalues of the covariance matrix.                           |\n| eigenvalues.sd               | Standard deviation of the eigenvalues of the covariance matrix.             |\n| freq_class.mean              | Mean frequency of the classes.                                              |\n| freq_class.sd                | Standard deviation of the frequency of the classes.                         |\n| gravity                      | Gravity, a measure related to the dataset's geometric properties.           |\n| kurtosis.mean                | Mean kurtosis of the attributes.                                            |\n| kurtosis.sd                  | Standard deviation of kurtosis of the attributes.                           |\n| leaves                       | Total number of leaves in the decision tree.                                |\n| leaves_branch.mean           | Mean number of leaves per branch in the decision tree.                      |\n| leaves_branch.sd             | Standard deviation of leaves per branch in the decision tree.               |\n| leaves_per_class.mean        | Mean number of leaves per class in the decision tree.                       |\n| leaves_per_class.sd          | Standard deviation of leaves per class in the decision tree.                |\n| max.mean                     | Mean of the maximum values of the attributes.                               |\n| median.mean                  | Mean of the median values of the attributes.                                |\n| median.sd                    | Standard deviation of the median values of the attributes.                  |\n| min.mean                     | Mean of the minimum values of the attributes.                               |\n| min.sd                       | Standard deviation of the minimum values of the attributes.                 |\n\n\n\n## File Output\nThe extracted features are stored in the CSV file `soybean_all_features.csv`. This file contains both the basic dataset characteristics and the extracted meta-features, formatted as `Feature, Value` pairs.\n\n---\n\nThis data card provides a quick summary of the dataset and the code used for feature extraction. It's a useful reference for understanding the dataset's structure and the extracted meta-features.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../styles.css"],"toc":true,"output-file":"hw02.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","quartodoc":{"title":"Documentation for HW03","package":"srinivasan_ai_839"},"theme":"cosmo","title":"Home Work 2"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}